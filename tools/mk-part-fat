#!/usr/bin/env bash

# Copyright (c) 2021, ARM Limited and Contributors. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# Neither the name of ARM nor the names of its contributors may be used
# to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

print_usage() {
    cat <<EOF
Usage:
    $0 -o OUTPUT -s SIZE [-l VOLUME-NAME] [SOURCE-FILE TARGET-FILE]...
    $0 -h
Create partition image file OUTPUT formatted as vfat.

    -o OUTPUT
       OUTPUT will be created if it does not exists.
       If it already exists it must be a regular file (not a block device) and
       the content will be discarded.
    -s SIZE
       Set the size of the created file OUTPUT to SIZE bytes.
    -l VOLUME-NAME
       Sets the volume name (label) of the filesystem.
       The VOLUME-NAME can be up to 11 characters long. The default is no label.

The SIZE argument can be given an optional unit (example: 10K is 10*1024).
Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).

Each SOURCE-FILE TARGET-FILE pair describe one file read from SOURCE_FILE and
written to OUTPUT as TARGET-FILE.
Directories in TARGET-FILE are created as needed.
EOF
}

set -e
set -u

OUTPUT=""
SIZE=""
VOLUME_NAME=""
while getopts "ho:s:l:" opt; do
    case $opt in
    ("o") OUTPUT="$OPTARG" ;;
    ("s") SIZE="$OPTARG" ;;
    ("l") VOLUME_NAME="$OPTARG" ;;
    ("h")
        print_usage
        exit 0
        ;;
    ("?")
        print_usage >&2
        exit 1
    esac
done
shift $((OPTIND-1))

if [[ -z "$OUTPUT" ]] ; then
    echo "Mandatory -o not given!" >&2
    echo "" >&2
    print_usage >&2
    exit 1
fi
readonly OUTPUT

if [[ -z "$SIZE" ]] ; then
    echo "Mandatory -s not given!" >&2
    echo "" >&2
    print_usage >&2
    exit 1
fi
readonly SIZE

readonly VOLUME_NAME

if [[ "$(($#%2))" -eq 1 ]] ; then
    echo "Each SOURCE-FILE must have a TARGET-FILE!" <&2
    echo "" >&2
    print_usage >&2
    exit 1
fi

if [[ -e "$OUTPUT" && ! -f "$OUTPUT" ]] ; then
    echo "Not a regular file: $OUTPUT" >&2
    echo "For details: $0 -h" >&2
    exit 1
fi

printf "" > "$OUTPUT"
truncate --size "$SIZE" "$OUTPUT"
mkfs.vfat "$OUTPUT" ${VOLUME_NAME:+-n "$VOLUME_NAME"} > /dev/null

export MTOOLS_SKIP_CHECK=1
while [[ "$#" -ne 0 ]] ; do
    SRC="$(realpath "$1")" ; shift
    DST="${1^^}" ; shift

    FULL_DIR_PATH=""
    while true ; do
        D="${DST%%/*}"
        NEW_DST="${DST#*/}"
        [[ "$NEW_DST" = "$DST" ]] && break
        DST="$NEW_DST"
        [[ "$D" = "" ]] && continue

        FULL_DIR_PATH+="/$D"
        # it exists?
        if mdir -i "$OUTPUT" -b "::$FULL_DIR_PATH" &>/dev/null ; then
            # if it is a directory it is fine
            mdir -i "$OUTPUT" -b "::$FULL_DIR_PATH/" &>/dev/null && continue

            # but a file is a critical error
            echo "$FULL_DIR_PATH exists but is not a directory!" >&2
            exit 1
        fi

        mmd -i "$OUTPUT" "::$FULL_DIR_PATH"
    done
    mcopy -i "$OUTPUT" -D overwrite "$SRC" "::$FULL_DIR_PATH/$DST"
done
